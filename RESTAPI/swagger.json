{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Product API",
    "description": "REST API for campaigns."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Campaigns",
      "description": "API for campaigns in the system."
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/campaigns/active": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Returns active campaigns",
        "description": "Returns active campaigns.",
        "responses": {
          "200": {
            "description": "Active campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      }
    },
    "/campaigns/active/{campaignId}": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Find one active campaign by ID.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "description": "ID of campaign that you want to see.",
            "type": "integer",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "New product is created.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Campaign not found"
          }
        }
      }
    },
    "/campaigns": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Returns all campaigns",
        "description": "Returns all campaigns",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      },
      "post": {
        "tags": ["Campaigns"],
        "summary": "Updates a campaign",
        "description": "Updates a campaign",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "campanha",
            "in": "body",
            "description": "Campaign that we want to create.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New campaign is created.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      }
    },
    "/campaigns/{campaignId}": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Find one campaign by ID",
        "description": "Find one campaign by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "ID of campaign that you want to see",
            "required": true,
            "type ": "number",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Campaign not found"
          }
        }
      },
      "put": {
        "tags": ["Campaigns"],
        "summary": "Updated campaign by ID",
        "description": "",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "ID of campaign that you want to update",
            "required": true,
            "type ": "number",
            "minimum": 1
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Campaign not found"
          }
        }
      },
      "delete": {
        "tags": ["Campaigns"],
        "summary": "Deletes a campaign by ID",
        "description": "Deletes a campaign by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Campaign not found"
          }
        }
      }
    },
    "/campaigns/disabled": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Returns disabled campaigns",
        "description": "Returns disabled campaigns",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Disabled campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      }
    },
    "/campaigns/total": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Returns total campaigns",
        "description": "Returns total campaigns",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Total campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      }
    },
    "/campaigns/status": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Returns status of campaigns",
        "description": "Returns status of campaigns",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status of the campaigns.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        }
      }
    },
    "/donations": {
      "get": {
        "tags": ["Donation"],
        "summary": "Returns status of campaigns",
        "description": "Returns status of campaigns",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status of the campaigns.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      },
      "put": {
        "tags": ["Donation"],
        "summary": "Update donations",
        "description": "Updated donations",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updated donation object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation updated."
          }
        }
      }
    },
    "/donations/{donationId}": {
      "get": {
        "tags": ["Donation"],
        "summary": "Get donation by ID",
        "description": "Get donation by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "donationId",
            "in": "path",
            "description": "donationID to find",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "400": {
              "description": "Invalid donationID supplied"
            },
            "404": {
              "description": "Donation not found"
            },
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      },
      "put": {
        "tags": ["Donation"],
        "summary": "Updated donation by ID",
        "description": "Updated donation by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "donationId",
            "in": "path",
            "description": "donation that need to be updated",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid donationID supplied"
          }
        }
      },
      "delete": {
        "tags": ["Donation"],
        "summary": "Deletes a donation by ID",
        "description": "Deletes a donation by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "donationId",
            "in": "path",
            "description": "donation that need to be updated",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/donations/processed": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns processed donations",
        "description": "Returns processed donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Processed donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/in-processing": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns in processing donations",
        "description": "Returns in processing donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "In Processing donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/canceled": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns canceled donations",
        "description": "Returns canceled donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Canceled donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/status": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns status of donations",
        "description": "Returns status of donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status of donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/count": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns count of donations",
        "description": "Returns count of donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Count of donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/total-donated": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns total donated",
        "description": "Returns total donated",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Total donated.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/total-spent": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns total spent",
        "description": "Returns total spent",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Total spent.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/users/count-donations": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns count donations",
        "description": "Returns count donations",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Count donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/users/{userId}": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns donations by userId",
        "description": "Returns donations by userId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID. ",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Count donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/donations/campaign/{campaignId}": {
      "get": {
        "tags": ["Donations"],
        "summary": "Returns donations by campaignId",
        "description": "Returns donations by campaignId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The Campaign ID.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Count donations.",
            "schema": {
              "$ref": "#/definitions/Donation"
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Returns the profile",
        "description": "Returns the profile",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profile.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Logs out current logged in user session",
        "description": "Logs out current logged in user session",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logs user into the system",
        "description": "Logs user into the system",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register user into the system",
        "description": "Register user into the system",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/{userId}": {
      "put": {
        "tags": ["Authentication"],
        "summary": "Updated user by ID",
        "description": "Updated user by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID. ",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          }
        }
      },
      "delete": {
        "tags": ["Authentication"],
        "summary": "Deletes a users by ID",
        "description": "Deletes a users by ID",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID. ",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          }
        }
      }
    },
    "/image/upload": {
      "post": {
        "tags": ["Image"],
        "summary": "upload image",
        "description": "upload image",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "upload image object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/images/download": {
      "post": {
        "tags": ["Image"],
        "summary": "Download image",
        "description": "Download image",
        "produces": ["application/xml", "application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Campaign": {
      "required": [
        "name",
        "description",
        "goalAmount",
        "iban",
        "responsibles",
        "logo"
      ],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "description": {
          "type": "string"
        },
        "goalAmount": {
          "type": "string",
          "minimum": 0.1
        },
        "currentAmount": {
          "type": "number",
          "default": 0
        },
        "iban": {
          "type": "string"
        },
        "responsibles": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": "active"
        },
        "logo": {
          "$ref": "#/definitions/Image"
        }
      }
    },
    "Donation": {
      "required": ["username", "campaign", "amount"],
      "properties": {
        "username:": {
          "type": "string"
        },
        "campaign:": {
          "$ref": "#/definitions/Campaign"
        },
        "amount:": {
          "type": "number",
          "minimum": 0.1
        },
        "status:": {
          "type": "string",
          "default": "in processing"
        }
      }
    },
    "User": {
      "required": ["username", "password", "fullname", "nif", "iban"],
      "properties": {
        "username:": {
          "type": "string"
        },
        "password:": {
          "type": "string"
        },
        "fullname:": {
          "type": "string"
        },
        "nif:": {
          "type": "number",
          "minimum": 100000000,
          "maximum": 999999999
        },
        "iban:": {
          "type": "string"
        },
        "role:": {
          "type": "string",
          "default": "user"
        },
        "coordinates:": {
          "$ref": "#/definitions/Coordinates"
        },
        "address:": {
          "type": "string"
        }
      }
    },
    "Coordinates": {
      "properties": {
        "latitude:": {
          "type": "number"
        },
        "longitude:": {
          "type": "number"
        }
      }
    },
    "Image": {
      "required": "logo",
      "properties": {
        "logo:": {
          "type": "string"
        }
      }
    }
  }
}
